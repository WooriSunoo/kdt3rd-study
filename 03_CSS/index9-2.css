body{
    background-color: #eee;
}

h1{
    text-align: center;
}

.container{
    width: 1000px;
    height: 400px;
    background-color: black;
    /* 가운데정렬 */
    margin:0 auto;
    /* 
        기본 용어
        - main axis : 주축
        - cross axis: 교차축 
        flex 요소를 나란하게...*/

        display: flex;

        /* flex-direction: 정렬 방향(주축방향)
            - row(default): 수평 정렬(좌->우) 12345
            - row-reverse: 수평 정렬(우->좌) 54321
            - column: 수직 정렬(위->아래)
            1
            2
            3
            4
            5
            -column-reverse: 수직 정렬(아래->위)
            5
            4
            3
            2
            1

         */
         flex-direction: row;
         /* flex-direction: row-reverse; */

         /* column 일 때 */
         /* flex-direction: column; */
         /* flex-direction: column-reverse; */

         /* justify-content: 주축 item을 어떻게 배치할 것인가?
            - flex-direction: 수평 정렬일 때; 주축=row
            - flex-direction: 수직 정렬일 때; 주축=column

            (사용가능한 속성)
            - flex-start: (default): 아이템을 start지점을 기준으로 나열
            - flex-end: 아이템을 end 지점을 기준으로 나열
            - space-between: 처음과 마지막 아이템을 양 끝에 붙이고, 나머지 영역 공평하게 나눔
            - space-around: 아이템들이 모든 여백을 공평하게 나눔(양끝 영역이 1이라면 나머지 영역은2)아이템들 양옆공간margin 같게
            - space-evenly: start부터 첫 아이템의 간격, 아이템 끼리의 간격, 마지막 아이템부터 end까지의 간격이 일정(모든요소의 남는공간 같게)
        */

        /* justify-content: flex-start; */
        
        /* justify-content: flex-end; */
        
        /* justify-content: space-between; */
        
        /* justify-content: space-around; */
        
        /* justify-content: space-evenly; */

        /* align-items: 교차축에 대해 item을 어떻게 배치할 것인가?
            - flex-direction이 수평 정렬일 때; 교차축= column
            - flex-direction이 수직 정렬일 때; 교차축= row

            (사용 가능한 속성)
            - stretch(default):cpmtaome의 교차축을 채우기 위해 늘림
                -현재 .items 요소에 width, height 값이 있어 늘어나지 않음
            -flex-start: 교차축의 시작점으로 정렬
            -flex-end: 교차축의 끝점으로 연결
            -center: 교차축의 가운데 정렬
            -baseline: item을 텍스트의 베이스라인을 기준으로 정렬
        */
        /* align-items: stretch; */
        /* align-items: flex-end; */
        /* align-items: flex-start; */
        /* align-items: center; */
        /* align-items:baseline; */


        /* flex-wrap: 즐바꿈(개행)처리
         -> 컨테이너가 한 줄에 아이템을 다 수용하지 못할 때, 줄바꿈 여부 설정가능
         (사용가능한 속성)
            - wrap: 줄바꿈
            - wrap-reverse: 출바꿈+아이템을 역순 배치
            
            카드가 여러개...백화점..넘칠 때 줄바꿈할때 사용*/
        /* width: 300px; */
        /* flex-wrap: wrap; */

        /* align-content: 여러 행 정렬
            (조건) flex-wrap: wrap 상태에서 아이템이 2줄이상 일 때 교차축 방향 설정
        */

        /* height: 300px; */

        /* align-content: flex-start, end: align-itme이랑 다르게 padding없이 여러행이 다 붙음 */
        /* align: 교차축기준, justify: 주축기준?? */
        /* align-content: stretch; */
        /* align-content: flex-start; */
        /* align-content: flex-end; */
        /* align-content: center; */
        /* align-content: space-between; */
        /* align-content: space-around; */
        /* align-content: space-evenly; */
        
}

.container > .items {
    width: 100px;
    /* height: 100px; */

    font-size: 36px;
    font-weight: 700;
    text-align: center;
    line-height: 100px;
}

.item1{
    background-color: red;
}

.item2{
    background-color: orange;
}

.item3{
    background-color: yellow;
}

.item4{
    background-color: green;
}

.item5{
    background-color: blue;
}

/* div안에 div정가운데 정렬 */

.outer{
    width: 300px;
    height: 300px;
    background-color: aquamarine;
}

.inner{
    width: 100px;
    height: 100px;
    background-color: pink;
}

/* ver.position, transform */
.outer1{
    position: relative;
}

.inner1{
    position: absolute;
    top:50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
/* ver.position, flex */

.outer2{
    display: flex;
    justify-content:center;
    align-items: center;
}